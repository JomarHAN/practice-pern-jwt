[{"/Users/jomarnguyen/Desktop/pern-jwt/client/src/index.js":"1","/Users/jomarnguyen/Desktop/pern-jwt/client/src/App.js":"2","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Dashboard.jsx":"3","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Header.jsx":"4","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Login.jsx":"5","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Register.jsx":"6","/Users/jomarnguyen/Desktop/pern-jwt/client/src/ContextAPI/StateProvider.js":"7","/Users/jomarnguyen/Desktop/pern-jwt/client/src/ContextAPI/reducer.js":"8","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Gallery.jsx":"9","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Upload.jsx":"10","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/ImageCom.jsx":"11"},{"size":430,"mtime":1612304183390,"results":"12","hashOfConfig":"13"},{"size":2201,"mtime":1612649119085,"results":"14","hashOfConfig":"13"},{"size":964,"mtime":1612580155633,"results":"15","hashOfConfig":"13"},{"size":1499,"mtime":1612579833108,"results":"16","hashOfConfig":"13"},{"size":1695,"mtime":1612412139352,"results":"17","hashOfConfig":"13"},{"size":1951,"mtime":1612411630169,"results":"18","hashOfConfig":"13"},{"size":367,"mtime":1612304676944,"results":"19","hashOfConfig":"13"},{"size":557,"mtime":1612579087289,"results":"20","hashOfConfig":"13"},{"size":1480,"mtime":1612650054773,"results":"21","hashOfConfig":"13"},{"size":2325,"mtime":1612578786676,"results":"22","hashOfConfig":"13"},{"size":402,"mtime":1612591314030,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1y645hb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/jomarnguyen/Desktop/pern-jwt/client/src/index.js",[],["54","55"],"/Users/jomarnguyen/Desktop/pern-jwt/client/src/App.js",["56"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport { useStateValue } from \"./ContextAPI/StateProvider\";\nimport Dashboard from \"./components/Dashboard\";\nimport Gallery from \"./components/Gallery\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [{ isAuth }, dispatch] = useStateValue();\n\n  const isVerify = async () => {\n    if (localStorage.token) {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n\n      if (parseRes === \"Unauthorize\") {\n        dispatch({\n          type: \"SET_ISAUTH\",\n          isAuth: false,\n        });\n        localStorage.removeItem(\"token\");\n      } else {\n        dispatch({\n          type: \"SET_ISAUTH\",\n          isAuth: true,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    isVerify();\n  }, []);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <div className=\"app\">\n        <div className=\"app__nav\">\n          <Header />\n        </div>\n        <div className=\"app__body container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                !isAuth ? <Login {...props} /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) =>\n                !isAuth ? <Register {...props} /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route\n              exact\n              path=\"/gallery\"\n              render={(props) =>\n                isAuth ? <Gallery {...props} /> : <Redirect to=\"/\" />\n              }\n            />\n            <Route exact path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Dashboard.jsx",["57"],"import React, { useEffect } from \"react\";\nimport { useStateValue } from \"../ContextAPI/StateProvider\";\nimport \"./Dashboard.css\";\nimport Upload from \"./Upload\";\n\nfunction Dashboard() {\n  const [{ isAuth, user }, dispatch] = useStateValue();\n\n  const getUserName = async () => {\n    const response = await fetch(\"http://localhost:5000/dashboard\", {\n      method: \"GET\",\n      headers: { token: localStorage.token },\n    });\n    const parseRes = await response.json();\n    if (parseRes) {\n      dispatch({\n        type: \"SET_USER\",\n        user: parseRes,\n      });\n    } else {\n      localStorage.removeItem(\"token\");\n    }\n  };\n\n  useEffect(() => {\n    getUserName();\n  }, []);\n  return (\n    <div className=\"dashboard\">\n      {isAuth ? (\n        <div className=\"dashboard__upload\">\n          <h1>Welcome {user?.user_name}</h1>\n          <Upload />\n        </div>\n      ) : (\n        <h1>you need to login</h1>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Header.jsx",[],"/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Login.jsx",["58"],"import React, { useState } from \"react\";\nimport { useStateValue } from \"../ContextAPI/StateProvider\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const [{}, dispatch] = useStateValue();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = inputs;\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { email, password };\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      const parseRes = await response.json();\n      if (parseRes.token) {\n        localStorage.setItem(\"token\", parseRes.token);\n        dispatch({\n          type: \"SET_ISAUTH\",\n          isAuth: true,\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return (\n    <div className=\"login\">\n      <h1 className=\"mt-5\">Login</h1>\n      <form onSubmit={(e) => onLogin(e)} className=\"login__form\">\n        <input\n          className=\"form-control my-3\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => onChange(e)}\n        />\n        <input\n          className=\"form-control my-3\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => onChange(e)}\n        />\n        <button className=\"btn btn-success form-control\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Register.jsx",["59"],"import React, { useState } from \"react\";\nimport \"./Register.css\";\nimport { useStateValue } from \"../ContextAPI/StateProvider\";\n\nfunction Register() {\n  const [{}, dispatch] = useStateValue();\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = inputs;\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const onRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { name, email, password };\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      const parseRes = await response.json();\n      if (parseRes.token) {\n        localStorage.setItem(\"token\", parseRes.token);\n        dispatch({\n          type: \"SET_ISAUTH\",\n          isAuth: true,\n        });\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return (\n    <div className=\"register\">\n      <h1 className=\"mt-5\">Register</h1>\n      <form className=\"register__form\" onSubmit={(e) => onRegister(e)}>\n        <input\n          className=\"form-control my-3\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={(e) => onChange(e)}\n        />\n        <input\n          className=\"form-control my-3\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => onChange(e)}\n        />\n        <input\n          className=\"form-control my-3\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => onChange(e)}\n        />\n        <button className=\"btn btn-success form-control\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/jomarnguyen/Desktop/pern-jwt/client/src/ContextAPI/StateProvider.js",[],"/Users/jomarnguyen/Desktop/pern-jwt/client/src/ContextAPI/reducer.js",["60"],"export const initialState = {\n    isAuth: false,\n    user: null,\n    gallery: []\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"SET_ISAUTH\":\n            return {\n                ...state,\n                isAuth: action.isAuth\n            };\n        case \"SET_USER\":\n            return {\n                ...state,\n                user: action.user\n            };\n        case \"SET_GALLERY\":\n            return {\n                ...state,\n                gallery: action.gallery\n            }\n    }\n}\n\nexport default reducer;","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Gallery.jsx",["61","62"],"import React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"../ContextAPI/StateProvider\";\nimport \"./Gallery.css\";\nimport ImageCom from \"./ImageCom\";\n\nfunction Gallery() {\n  const [{ user }] = useStateValue();\n  const [images, setImages] = useState([]);\n\n  const getImages = async () => {\n    const response = await fetch(`/dashboard/retrieve/${user?.user_id}`, {\n      method: \"GET\",\n    });\n    const parseRes = await response.json();\n    setImages(parseRes.rows);\n  };\n\n  useEffect(() => {\n    getImages();\n  }, []);\n\n  const handleRemove = async (cloud_id) => {\n    try {\n      const res = await fetch(`/gallery/delete?cloud_id=${cloud_id}`, {\n        method: \"DELETE\",\n      });\n      setImages(images.filter((image) => image.cloud_id !== cloud_id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <div className=\"gallery\">\n      <h1>Gallery here</h1>\n      <div className=\"gallery__container\">\n        {images?.map((image) => (\n          <div className=\"gallery__item\">\n            <ImageCom image={image} />\n            <div className=\"gallery__groupBtn\">\n              <button className=\"btn btn-primary\">Edit</button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => handleRemove(image.cloud_id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Gallery;\n","/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/Upload.jsx",[],"/Users/jomarnguyen/Desktop/pern-jwt/client/src/components/ImageCom.jsx",[],["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":46,"column":6,"nodeType":"71","endLine":46,"endColumn":8,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":27,"column":6,"nodeType":"71","endLine":27,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":8,"column":5,"nodeType":"81","messageId":"82","endLine":24,"endColumn":6},{"ruleId":"69","severity":1,"message":"83","line":20,"column":6,"nodeType":"71","endLine":20,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":24,"column":13,"nodeType":"87","messageId":"88","endLine":24,"endColumn":16},{"ruleId":"65","replacedBy":"89"},{"ruleId":"67","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isVerify'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'getUserName'. Either include it or remove the dependency array.",["94"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["95"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [isVerify]",{"range":"102","text":"103"},"Update the dependencies array to be: [getUserName]",{"range":"104","text":"105"},"Update the dependencies array to be: [getImages]",{"range":"106","text":"107"},[1199,1201],"[isVerify]",[672,674],"[getUserName]",[537,539],"[getImages]"]